library(sf)
library(here)
library(raster)
library(terra)
library(tidyverse)
library(fs)
# Create data Frame of the polygon of whole of Aus
Ausoutline <- st_read(here("DATA", "gadm41_AUS.gpkg"),
layer='ADM_ADM_0')
# Another way to check our CRS
st_crs(Ausoutline)$proj4string #WGS84
# Set the CRS to the world EPSG System
Ausoutline <- Ausoutline %>%
st_set_crs(., 4326)
# Transform for Local Data > Projected Meters
AusoutlinePROJECTED <- Ausoutline %>%
st_transform(.,3112)
print(AusoutlinePROJECTED)
# Convert sf to sp
AusoutlineSP <- Ausoutline %>%
as(., "Spatial")
#Conver sp to sf
AusoutlineSF <- AusoutlineSP %>%
st_as_sf()
SSP1<- terra::rast(here("DATA/wc2.1_2.5m_tmax_ACCESS-CM2_ssp126_2081-2100.tif"))
SSP1
SSP5<- terra::rast(here("DATA/wc2.1_2.5m_tmax_ACCESS-CM2_ssp585_2081-2100.tif"))
SSP5
# Rename our Layer Within the Stack
# using the combine function
month <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
names(SSP1) <- month # rename the names column to the months
# access the data just for january using $ which is used for the column
SSP1$Jan
# Rename our Layer Within the Stack
# using the combine function
month <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
names(SSP5) <- month # rename the names column to the months
# access the data just for january using $ which is used for the column
SSP5$Jan
plot(SSP1)
plot(SSP5)
class(SSP1)
# plot Geom
plot(Ausoutline$geom)
# Simplify the Geom
AusoutSIMPLE <- Ausoutline %>%
st_simplify(., dTolerance = 1000) %>%
st_geometry()%>%
plot()
# Make sure we are in the coordinates system
print(Ausoutline)
# For Raster
crs(SSP1)
crs(SSP5)
crs(SSP5)
# crop our map extent
Austempmin <- Ausoutline %>%
# now crop our temp data to the extent
terra::crop(SSP1,.)
# crop our map extent
Austempmax <- Ausoutline %>%
# now crop our temp data to the extent
terra::crop(SSP5,.)
# plot the output
plot(Austempmin)
plot(Austempmax)
# Use Mask in order for just the shape of austreila
exactAusmin<-terra::mask(Austempmin, Ausoutline)
plot(exactAusmin)
# Use Mask in order for just the shape of austreila
exactAusmax<-terra::mask(Austempmax, Ausoutline)
plot(exactAusmax)
# Using the stack we can extract data > lets make a data frame of samle sites
site <- c("Brisbane", "Melbourne", "Perth", "Sydney", "Broome", "Darwin", "Orange",
"Bunbury", "Cairns", "Adelaide", "Gold Coast", "Canberra", "Newcastle",
"Wollongong", "Logan City" )
lon <- c(153.03, 144.96, 115.86, 151.21, 122.23, 130.84, 149.10, 115.64, 145.77,
138.6, 153.43, 149.13, 151.78, 150.89, 153.12)
lat <- c(-27.47, -37.91, -31.95, -33.87, 17.96, -12.46, -33.28, -33.33, -16.92,
-34.93, -28, -35.28, -32.93, -34.42, -27.64)
#Put all of this inforamtion into one list
samples <- data.frame(site, lon, lat, row.names="site")
# Extract the data from the Rasterstack for all points
AUcitytempmax<- terra::extract(Austempmax, samples)
AUcitytempmin<- terra::extract(Austempmin, samples)
# add the names of cities to the rows of Aucitytemp
AUcitytempmax <- as_tibble(AUcitytempmax) %>%
add_column(Site = site, .before = "Jan")
# add the names of cities to the rows of Aucitytemp
AUcitytempmin <- as_tibble(AUcitytempmin) %>%
add_column(Site = site, .before = "Jan")
AUcitytempmax
# Convert your city data (wide) into long format
AUcitytempmax_long <- AUcitytempmax %>%
pivot_longer(cols = Jan:Dec, names_to = "Month", values_to = "Temp")
# Now you can use your old logic again
maxofall <- AUcitytempmax_long %>%
group_by(Site) %>%
summarise(Max_SSP5 = max(Temp, na.rm = TRUE))
# Convert your city data (wide) into long format
AUcitytempmin_long <- AUcitytempmin %>%
pivot_longer(cols = Jan:Dec, names_to = "Month", values_to = "Temp")
# Now you can use your old logic again
minofall <- AUcitytempmin_long %>%
group_by(Site) %>%
summarise(Min_SSP1 = max(Temp, na.rm = TRUE))
library(dplyr)
library(tidyr)
# ---- Step 3: Left join both tables ----
# start from ssp1 (left), join ssp5 (right) by site name
AllCities <- maxofall %>%
left_join(minofall,
by = c("Site" = "Site"))
# ---- Step 4: view it ----
print(AllCities)
### Interactive Histogram with plotly
library(plotly)
# define axes
x <- list(title = "City")
y <- list(title = "Maximum Temperature (°C)")
fig <- plot_ly(alpha = 0.7) %>%
add_histogram(x = AllCities$Site,
y = AllCities$Max_SSP5,
name = "SSP5 (High Emissions)",
marker = list(color = "red")) %>%
add_histogram(x = AllCities$Site,
y = AllCities$Min_SSP1,
name = "SSP1 (Low Emissions)",
marker = list(color = "blue")) %>%
layout(barmode = "overlay", bargap=0.1, xaxis = x, yaxis = y)
fig
fig <- plot_ly(df, type = 'scatter', mode = 'lines+markers') %>%
name = "SSP1 (Low Emissions)",
add_trace(x = ~Site, y = ~Max_SSP5,
line = list(color = '#DB005B'),
layout(
xaxis = list(title = "City",
categoryarray = levels(df$Site)),
)
fig
add_trace(x = ~Site, y = ~Min_SSP1,
line = list(color = '#2ADBB7'),
name = "SSP5 (High Emissions)",
marker = list(color = '#DB005B', size = 9)) %>%
title = "Projected Maximum Temperatures per City (2081–2100)",
categoryorder = "array",
yaxis = list(title = "Temperature (°C)")
library(sf)
library(sf)
library(here)
library(raster) #dont use it
library(terra)
library(tidyverse)
library(fs)
# Create data Frame of the polygon of whole of Aus
Ausoutline <- st_read(here("DATA", "gadm41_AUS.gpkg"),
layer='ADM_ADM_0')
# Another way to check our CRS
st_crs(Ausoutline)$proj4string #WGS84
# Set the CRS to the world EPSG System
Ausoutline <- Ausoutline %>%
st_set_crs(., 4326)
# Transform for Local Data > Projected Meters
AusoutlinePROJECTED <- Ausoutline %>%
st_transform(.,3112)
print(AusoutlinePROJECTED)
# Convert sf to sp
AusoutlineSP <- Ausoutline %>%
as(., "Spatial")
#Conver sp to sf
AusoutlineSF <- AusoutlineSP %>%
st_as_sf()
SSP1<- terra::rast(here("DATA/wc2.1_2.5m_tmax_ACCESS-CM2_ssp126_2081-2100.tif"))
SSP1
SSP5<- terra::rast(here("DATA/wc2.1_2.5m_tmax_ACCESS-CM2_ssp585_2081-2100.tif"))
SSP5
# Rename our Layer Within the Stack
# using the combine function
month <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
names(SSP1) <- month # rename the names column to the months
# access the data just for january using $ which is used for the column
SSP1$Jan
# Rename our Layer Within the Stack
# using the combine function
month <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
names(SSP5) <- month # rename the names column to the months
# access the data just for january using $ which is used for the column
SSP5$Jan
plot(SSP1)
plot(SSP5)
class(SSP1)
# plot Geom
plot(Ausoutline$geom)
# Simplify the Geom
AusoutSIMPLE <- Ausoutline %>%
st_simplify(., dTolerance = 1000) %>%
st_geometry()%>%
plot()
# Make sure we are in the coordinates system
print(Ausoutline)
# For Raster
crs(SSP1)
crs(SSP5)
# crop our map extent
Austempmin <- Ausoutline %>%
# now crop our temp data to the extent
terra::crop(SSP1,.)
# crop our map extent
Austempmax <- Ausoutline %>%
# now crop our temp data to the extent
terra::crop(SSP5,.)
# plot the output
plot(Austempmin)
plot(Austempmax)
# Use Mask in order for just the shape of austreila
exactAusmin<-terra::mask(Austempmin, Ausoutline)
plot(exactAusmin)
# Use Mask in order for just the shape of austreila
exactAusmax<-terra::mask(Austempmax, Ausoutline)
plot(exactAusmax)
# Using the stack we can extract data > lets make a data frame of samle sites
site <- c("Brisbane", "Melbourne", "Perth", "Sydney", "Broome", "Darwin", "Orange",
"Bunbury", "Cairns", "Adelaide", "Gold Coast", "Canberra", "Newcastle",
"Wollongong", "Logan City" )
lon <- c(153.03, 144.96, 115.86, 151.21, 122.23, 130.84, 149.10, 115.64, 145.77,
138.6, 153.43, 149.13, 151.78, 150.89, 153.12)
lat <- c(-27.47, -37.91, -31.95, -33.87, 17.96, -12.46, -33.28, -33.33, -16.92,
-34.93, -28, -35.28, -32.93, -34.42, -27.64)
#Put all of this inforamtion into one list
samples <- data.frame(site, lon, lat, row.names="site")
# Extract the data from the Rasterstack for all points
AUcitytempmax<- terra::extract(Austempmax, samples)
AUcitytempmin<- terra::extract(Austempmin, samples)
# add the names of cities to the rows of Aucitytemp
AUcitytempmax <- as_tibble(AUcitytempmax) %>%
add_column(Site = site, .before = "Jan")
# add the names of cities to the rows of Aucitytemp
AUcitytempmin <- as_tibble(AUcitytempmin) %>%
add_column(Site = site, .before = "Jan")
AUcitytempmax
# Convert your city data (wide) into long format
AUcitytempmax_long <- AUcitytempmax %>%
pivot_longer(cols = Jan:Dec, names_to = "Month", values_to = "Temp")
# Now you can use your old logic again
maxofall <- AUcitytempmax_long %>%
group_by(Site) %>%
summarise(Max_SSP5 = max(Temp, na.rm = TRUE))
# Convert your city data (wide) into long format
AUcitytempmin_long <- AUcitytempmin %>%
pivot_longer(cols = Jan:Dec, names_to = "Month", values_to = "Temp")
# Now you can use your old logic again
minofall <- AUcitytempmin_long %>%
group_by(Site) %>%
summarise(Min_SSP1 = max(Temp, na.rm = TRUE))
library(dplyr)
library(tidyr)
# ---- Step 3: Left join both tables ----
# start from ssp1 (left), join ssp5 (right) by site name
AllCities <- maxofall %>%
left_join(minofall,
by = c("Site" = "Site"))
# ---- Step 4: view it ----
print(AllCities)
### Interactive Histogram with plotly
library(plotly)
# define axes
x <- list(title = "City")
y <- list(title = "Maximum Temperature (°C)")
fig <- plot_ly(alpha = 0.7) %>%
add_histogram(x = AllCities$Site,
y = AllCities$Max_SSP5,
name = "SSP5 (High Emissions)",
marker = list(color = "red")) %>%
add_histogram(x = AllCities$Site,
y = AllCities$Min_SSP1,
name = "SSP1 (Low Emissions)",
marker = list(color = "blue")) %>%
layout(barmode = "overlay", bargap=0.1, xaxis = x, yaxis = y)
fig
add_trace(x = ~Site, y = ~Min_SSP1,
line = list(color = '#2ADBB7'),
name = "SSP5 (High Emissions)",
marker = list(color = '#DB005B', size = 9)) %>%
title = "Projected Maximum Temperatures per City (2081–2100)",
categoryorder = "array",
yaxis = list(title = "Temperature (°C)")
